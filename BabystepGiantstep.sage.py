

# This file was *autogenerated* from the file BabystepGiantstep.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_0p5 = RealNumber('0.5'); _sage_const_240556067 = Integer(240556067); _sage_const_0 = Integer(0); _sage_const_486662 = Integer(486662); _sage_const_103666880 = Integer(103666880); _sage_const_133544401 = Integer(133544401); _sage_const_220898463 = Integer(220898463); _sage_const_208070124 = Integer(208070124)
def babystep_giantstep(G, Y, E):
    m = int((E.order()-_sage_const_1 )**_sage_const_0p5  + _sage_const_0p5 )
    # Baby step
    table = {}
    YrG = Y  # Y-r*G
    for r in range(m):
        table[YrG] = r
        YrG -= G
    # Giant step
    mG = m * G  # m*G
    qmG = mG    # qm*G
    for q in range(_sage_const_1 , m):
        if qmG in table:  # 左辺と右辺が一致するとき
            return q * m + table[qmG]
        qmG += mG
    return None

p = _sage_const_240556067 
F = GF(p)
E = EllipticCurve(F, [_sage_const_0 , _sage_const_486662 , _sage_const_0 , _sage_const_1 , _sage_const_0 ])  # Curve25519
G = E(_sage_const_103666880 , _sage_const_133544401 )
Y = E(_sage_const_220898463 , _sage_const_208070124 )

x = babystep_giantstep(G, Y, E)
print(x)
print(Y == x*G)

